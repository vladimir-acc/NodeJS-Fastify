generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./db_osvita.db"
}

model camp {
  id         Int          @id @default(autoincrement())
  type       String
  title      String?
  link       String?
  ico        String?
  price      String?
  camp_terms camp_terms[]
}

model camp_terms {
  id       Int     @id @default(autoincrement())
  subtitle String?
  period   String?
  other    String?
  sortId   Int     @default(1)
  campId   Int
  camp     camp    @relation(fields: [campId], references: [id])
}

model scool {
  id          Int           @id @default(autoincrement())
  type        String
  title       String?
  link        String?
  ico         String?
  price       String?
  assignId    Int
  assign      assignment    @relation(fields: [assignId], references: [id])
  scool_terms scool_terms[]
}

model scool_terms {
  id       Int     @id @default(autoincrement())
  subtitle String?
  period   String?
  other    String?
  sortId   Int     @default(1)
  scoolId  Int
  scool    scool   @relation(fields: [scoolId], references: [id])
}

model assignment {
  id    Int     @id @default(autoincrement())
  title String?
  scool scool[]
}

model users {
  id       Int     @id @default(autoincrement())
  login    String  @unique
  password String
  email    String  @unique
  actived  Boolean @default(true)
  role     String  @default("USER")
  token    token[]
}

model token {
  id           Int       @id @default(autoincrement())
  refreshToken String
  created      DateTime  @default(now())
  updated      DateTime?
  userId       Int
  user         users?    @relation(fields: [userId], references: [id])
}

model blog {
  id        Int      @id @default(autoincrement())
  date      DateTime @default(now()) @updatedAt
  title     String
  bref      String
  href      String
  src       String
  alt       String?
  content   String?
  published Boolean  @default(true)
  images    image[]
  galery    galery[]
  tagsId    Int      @default(1)
  tags      tags     @relation(fields: [tagsId], references: [id])
}

model image {
  id     Int     @id @default(autoincrement())
  title  String?
  href   String
  blogId Int
  images blog    @relation(fields: [blogId], references: [id])
}

model galery {
  id       Int     @id @default(autoincrement())
  title    String?
  href     String
  galeryId Int
  galery   blog    @relation(fields: [galeryId], references: [id])
}

model tags {
  id    Int     @id @default(autoincrement())
  title String?
  blog  blog[]
}

model types_of_courses {
  id           Int      @id @default(autoincrement())
  title        String?
  course_terms course[]
}

model course {
  id           Int              @id @default(autoincrement())
  title        String?
  typeId       Int              @default(1)
  type         types_of_courses @relation(fields: [typeId], references: [id])
  course_terms course_terms[]
}

model course_terms {
  id       Int     @id @default(autoincrement())
  duration String? @default("З’ясовуй у адміна")
  period   String? @default("З’ясовуй у адміна")
  cost     String? @default("З’ясовуй у адміна")
  link     String?
  courseId Int
  course   course  @relation(fields: [courseId], references: [id])
}

model contact {
  id      Int     @id @default(autoincrement())
  title   String?
  address String?
  phone   String?
  email   String?
  action  String? @default("Замовити дзвінок")
}

model cities {
  id   Int     @id @default(autoincrement())
  name String?
  src  String? @default("https://maps.google.com/maps?width=1180&amp;height=475&amp;hl=uk&amp;q=insha osvita kremenchug&amp;t=&amp;z=15&amp;ie=UTF8&amp;iwloc=B&amp;output=embed")
}
